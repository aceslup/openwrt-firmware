#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: kenzo
#=================================================

name: Lienol Newifi3 .config

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'true'

env:
  REPO_URL: https://github.com/Lienol/openwrt
#  REPO_BRANCH: 19.07
#  REPO_BRANCH: 21.02
  REPO_BRANCH: 22.03
#  REPO_BRANCH: 23.05
#  REPO_BRANCH: master

  CONFIG_FILE: lienol-newifi3.config

  FEEDS_CONF: feeds.conf.default
  DIY_P1_SH: diy-part1-lienol.sh
  DIY_P2_SH: diy-part2.sh
  
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: Ubuntu-20.04

    steps:
    - name: 检查
      uses: actions/checkout@main

    - name: 初始化环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        ( sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc-s1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx-ucl libelf-dev autoconf automake libtool autopoint device-tree-compiler ccache xsltproc rename tree antlr3 gperf wget curl swig rsync
        sudo -E apt-get -qq purge azure-cli ghc* zulu* hhvm llvm* firefox powershell openjdk* dotnet* google* mysql* php* android*
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean ) &
        sudo timedatectl set-timezone "$TZ"

    - name: 工作目录 & 磁盘 空间检查
      run: |
        # PWD === /home/runner/work/openwrt-firmware/openwrt-firmware
        echo "PWD === $PWD"
        df -hT $PWD
        echo "GITHUB_WORKSPACE === $GITHUB_WORKSPACE"
        
    - name: 克隆源代码
      run: |
        echo "myFiles === $PWD"
        git clone -b $REPO_BRANCH --single-branch $REPO_URL openwrt
        echo "cloneFiles === ${PWD}/openwrt"
        tree -L 2 --dirsfirst -p .
        
#    - name: 自定义安装源
#      working-directory: ./openwrt
#      run: |
#        pwd && ls -l
#        sh -x $GITHUB_WORKSPACE/$DIY_P1_SH
      
 #   - name: 更新 & 安装 feeds
 #     working-directory: ./openwrt
 #     run: |
 #       ./scripts/feeds update -a
 #       ./scripts/feeds install -a
        
 #   - name: 自定义配置
 #     working-directory: ./openwrt
 #     run: |
 #       sh -x $GITHUB_WORKSPACE/$DIY_P2_SH
 
 #   - name: SSH 连接 to Actions
 #     uses: P3TERX/ssh2actions@v1.0.0
 #     if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
 #     env:
 #       TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
 #       TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        
#    - name: 组织配置文件
#      run: |
#        mkdir -p /tmp/upload
#        cd openwrt
#        cp .config /tmp/upload/$CONFIG_FILE

#    - name: 上传配置文件
#      uses: actions/upload-artifact@main
#      with:
#        name: ${{ env.CONFIG_FILE }}
#        path: /tmp/upload

#    - name: 删除工作流
#      uses: c-hive/gha-remove-artifacts@v1.2.0
#      with:
#        age: '1 day'
#        skip-recent: 5

#    - name: 删除旧的 workflow 运行记录
#      uses: GitRML/delete-workflow-runs@main
#      with:
#        retain_days: 30
